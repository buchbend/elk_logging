# The # character at the beginning of a line indicates a comment. Use
# comments to describe your configuration.
input {
       beats {
              port => 5044
            }
}

filter {
     mutate {
       add_field => {"docker_compose_service" => "%{[docker][container][labels][com_docker_compose_service]}"}
     }

     if "karmada" in [docker_compose_service] and "db" not in [docker_compose_service] {

          grok {
            match => {"message" => [
            "%{TIMESTAMP_ISO8601:log_timestamp}\s+\[%{PROG:task_id}/%{PROG:task_name}\]\s+%{PROG:name}\s+%{LOGLEVEL:log_level}\s+%{GREEDYDATA:log_message}",
            "%{TIMESTAMP_ISO8601:log_timestamp}\s+%{PROG:name}\s+%{LOGLEVEL:log_level}\s+%{GREEDYDATA:log_message}"
            ]}
          }
          if "_grokparsefailure" not in [tags] {
              mutate {
               replace => { "message" => "%{log_message}" }
               remove_field => "log_message"
              }
              date {
                match => ["log_timestamp", "ISO8601"]
                target => "@timestamp"
                remove_field => "log_timestamp"
              }
              }

        }

     else if "uwsgi" in [docker_compose_service] {
         grok {
           match => { "message" => "(?m)\[pid: %{NUMBER:pid}\|app: %{NUMBER:id}\|req: %{NUMBER:currentReq}/%{NUMBER:totalReq}\] %{IP:remoteAddr} \(%{WORD:remoteUser}?\) \{%{NUMBER:CGIVar} vars in %{NUMBER:CGISize} bytes\} %{SYSLOG5424SD:timestamp} %{WORD:method} %{URIPATHPARAM:uri} \=\> generated %{NUMBER:resSize} bytes in %{NUMBER:resTime} msecs \(HTTP/%{NUMBER:httpVer} %{NUMBER:status}\) %{NUMBER:headers} headers in %{NUMBER:headersSize} bytes %{GREEDYDATA:coreInfo}" }
         }
         date {
           match => [ "log_timestamp" , "dd/MMM/yyyy:HH:mm:ss Z" ]
           target => "@timestamp"
           remove_field => "log_timestamp"
         }
       }
}


output {
       elasticsearch {
                      hosts => "elasticsearch:9200"
                      index => "docker"
                     }
}
